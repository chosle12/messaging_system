CMAKE_MINIMUM_REQUIRED(VERSION 3.14)

SET(PROJECT_NAME unittest)
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

IF(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -D_DEBUG /MDd")
ELSE()
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -D_DEBUG")
ENDIF()

PROJECT(${PROJECT_NAME})

ADD_EXECUTABLE(${PROJECT_NAME} utilities.cpp container.cpp threads.cpp network.cpp)
    
INCLUDE_DIRECTORIES(../utilities)

ADD_DEPENDENCIES(${PROJECT_NAME} utilities)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC utilities)

IF(USE_TYPE_CONTAINER)
    INCLUDE_DIRECTORIES(../container)

    ADD_DEPENDENCIES(${PROJECT_NAME} container)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC container)
ENDIF()

INCLUDE_DIRECTORIES(../threads)

ADD_DEPENDENCIES(${PROJECT_NAME} threads)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC threads)

INCLUDE_DIRECTORIES(../network)

ADD_DEPENDENCIES(${PROJECT_NAME} network)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} PUBLIC network)

IF(USE_UNIT_TEST)
    FIND_PACKAGE(GTest CONFIG REQUIRED)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} PRIVATE GTest::gtest GTest::gtest_main)
ENDIF()